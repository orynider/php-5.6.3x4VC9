.pgaw:Help.f.t insert end \
"CREATE TABLE" {bold} "

CREATE \[ TEMPORARY | TEMP \] TABLE table (
	column type
	\[ NULL | NOT NULL \] \[ UNIQUE \] \[ DEFAULT value \]
	\[column_constraint_clause | PRIMARY KEY } \[ ... \] \]
	\[, ... ]
	\[, PRIMARY KEY ( column \[, ...\] ) \]
	\[, CHECK ( condition ) \]
	\[, table_constraint_clause \]
	) \[ INHERITS ( inherited_table \[, ...\] ) \]
" {code} "
TEMPORARY
	The table is created only for this session, and is automatically dropped on session exit. Existing permanent tables with the same name are not visible while the temporary table exists. 
" {} "
table" {italic} "
   The name of a new table to be created. 
" {} " 
column" {italic} "
   The name of a column. 
" {} "
type" {italic} "
   The type of the column. This may include array specifiers. Refer to the PostgreSQL User's Guide for further information about data types and arrays. 
" {} "
DEFAULT value" {italic} "
   A default value for a column. See the DEFAULT clause for more information. 
" {} "
column_constraint_clause" {italic} "
   The optional column constraint clauses specify a list of integrity constraints or tests which new or updated entries must satisfy for an insert or update operation to succeed. Each constraint must evaluate to a boolean expression. Although SQL92 requires the column_constraint_clause to refer to that column only, Postgres allows multiple columns to be referenced within a single column constraint. See the column constraint clause for more information. 
" {} "
table_constraint_clause" {italic} "
   The optional table CONSTRAINT clause specifies a list of integrity constraints which new or updated entries must satisfy for an insert or update operation to succeed. Each constraint must evaluate to a boolean expression. Multiple columns may be referenced within a single constraint. Only one PRIMARY KEY clause may be specified for a table; PRIMARY KEY column (a table constraint) and PRIMARY KEY (a column constraint) are mutually exclusive.. See the table constraint clause for more information. 
" {} "
INHERITS inherited_table" {italic} "
   The optional INHERITS clause specifies a collection of table names from which this table automatically inherits all fields. If any inherited field name appears more than once, Postgres reports an error. Postgres automatically allows the created table to inherit functions on tables above it in the inheritance hierarchy. 

Aside:  Inheritance of functions is done according to the conventions of the Common Lisp Object System (CLOS). 
"

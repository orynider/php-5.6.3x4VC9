.pgaw:Help.f.t insert end "LOAD" {bold} " Loads an object (or \".o\") file into the Postgres backend address space. Once a file is loaded, all functions in that file can be accessed. This function is used in support of user-defined types and \
functions. 

If a file is not loaded using LOAD, the file will be loaded automatically the first time the function is called by Postgres. LOAD can also be used to reload an object file if it has been edited and \
recompiled. Only objects created from C language files are supported at this time. 


" {} "Synopsis" {bold} "
                  
          LOAD 'filename'
          
" {} "Usage" {bold} "

                --Load the file /usr/postgres/demo/circle.o
                --
                LOAD '/usr/postgres/demo/circle.o'
                
" {} "Notes" {bold} "

Functions in loaded object files should not call functions in other object files loaded through the LOAD command. For example, all functions in file A should call each other, functions in the \
standard or math libraries, or in Postgres itself. They should not call functions defined in a different loaded file B. This is because if B is reloaded, the Postgres loader is not able to relocate the \
calls from the functions in A into the new address space of B. If B is not reloaded, however, there will not be a problem. 

Object files must be compiled to contain position independent code. For example, on DECstations you must use /bin/cc with the -G 0 option when compiling object files to be loaded.  \

Note that if you are porting Postgres to a new platform, LOAD will have to work in order to support ADTs. 
"


'\"
'\" The contents of this file are subject to the AOLserver Public License
'\" Version 1.1 (the "License"); you may not use this file except in
'\" compliance with the License. You may obtain a copy of the License at
'\" http://aolserver.com/.
'\"
'\" Software distributed under the License is distributed on an "AS IS"
'\" basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
'\" the License for the specific language governing rights and limitations
'\" under the License.
'\"
'\" The Original Code is AOLserver Code and related documentation
'\" distributed by AOL.
'\" 
'\" The Initial Developer of the Original Code is America Online,
'\" Inc. Portions created by AOL are Copyright (C) 1999 America Online,
'\" Inc. All Rights Reserved.
'\"
'\" Alternatively, the contents of this file may be used under the terms
'\" of the GNU General Public License (the "GPL"), in which case the
'\" provisions of GPL are applicable instead of those above.  If you wish
'\" to allow use of your version of this file only under the terms of the
'\" GPL and not to allow others to use your version of this file under the
'\" License, indicate your decision by deleting the provisions above and
'\" replace them with the notice and other provisions required by the GPL.
'\" If you do not delete the provisions above, a recipient may use your
'\" version of this file under either the License or the GPL.
'\" 
'\"
'\" $Header: /Users/dossy/Desktop/cvs/aolserver/doc/Ns_ConnType.3,v 1.1 2006/04/19 17:37:30 jgdavidson Exp $
'\"
'\" 
.so man.macros

.TH Ns_ConnType 3 4.0 AOLserver "AOLserver Library Procedures"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
Ns_ConnGetType, Ns_ConnSetType \- Routines to manage the HTTP response type
.SH SYNOPSIS
.nf
\fB#include "ns.h"\fR
.sp
char *
\fBNs_ConnGetType\fR(\fIconn\fR)
.sp
void
\fBNs_ConnSetType\fR(\fIconn, type\fR)
.SH ARGUMENTS
.AS Ns_Conn conn in
.AP Ns_Conn conn in
Pointer to open connection.
.AP char *type in
Character string with response mimetype.
.BE

.SH DESCRIPTION
.PP
These routines both manage the eventual \fIcontent-type\fR header
which is generated by a later call to \fBNs_ConnFlush\fR or
\fBNs_ConnFlushDirect\fR as well as manage the appropriate character
encoding for text output types. 

.TP
char *\fBNs_ConnGetType\fR(\fIconn\fR)
Return the current HTTP mime type (e.g., "text/html; charset=iso-8859-1")
or NULL if no type has yet been set.

.TP
void \fBNs_ConnSetType\fR(\fIconn, type\fR)
Sets the mimetype of the response to the given \fItype\fR.  A later
call to \fBNs_ConnFlush\fR will include a header of the form
\fIcontent-type: type\fR when generating the response.

.SH "CHARSETS AND ENCODINGS"
.PP
For text types, a call to \fBNs_ConnSetType\fR can also include an
optional "charset=" attribute.  If no \fIcharset\fR is specified,
the server will append a default charset if specified as the
\fIoutputcharset\fR server configuration variable.

.PP
With a given or automatically appended charset for text types, the
server will then set the output encoding to the cooresponding
Tcl_Encoding, for example, mapping the charset "iso-8859-1" to the
Tcl_Encoding equivalent "iso8859-1".  All text later sent via 
\fBNs_ConnFlush\fR will be first encoded using the determined
Tcl_Encoding (calls to \fBNs_ConnFlushDirect\fR will bypass this
encoding step).  See the man pages on \fBNs_GetCharsetEncoding\fR
for details on how these mappings are configured.

.PP
The charset modification feature was added in later versions of
AOLserver to support legacy code which may have been sprinkled with
direct calls to set text types without specifying the charset, e.g.,
calls such as:

.CS
	ns_return 200 text/html "<body>hello</body>"
.CE

.SH EXAMPLES
.PP
The following example demonstrates sending Japanese character data.
In this case, assume "utf8string" contains a series of UTF-8 bytes
with various Japanese characters.  The call to \fBNs_ConnSetType\fR
will setup the appropriate "shiftjis" output Tcl_Encoding to match
the given "shift_jis" charset:

.CS
	Ns_ConnSetStatus(conn, 200);
	Ns_ConnSetType(conn, "text/html; charset=shift_jis");
	Ns_ConnFlushDirect(conn, utf8string, -1, 0);
.CE

The following demonstrates the behavior of the default server charset
encoding.  Assume the following is set in the config file:

.CS
	ns_section ns/server/serverName
	ns_param outputcharset iso-8859-1
.CE

In this case, a call to \fBNs_ConnSetType\fR(\fIconn, "text/html"\fR)
without a specific charset would be modified to include
"charset=iso-8859-1".  Based on this modification, the output
encoding would be set to the "iso8859-1" Tcl_Encoding.

.SH "SEE ALSO"
Ns_ConnGetType(3), Ns_ConnSetType(3), Ns_ConnFlush(3),
Ns_ConnFlushDirect(3), Ns_ConnSetRequiredHeaders(3),
Ns_ConnQueueHeaders(3), Ns_GetCharsetEncoding(3), Ns_GetTypeEncoding(3),
ns_conn(n)

.SH KEYWORDS
connectionn, response, status, encoding, charset


'\"
'\" The contents of this file are subject to the AOLserver Public License
'\" Version 1.1 (the "License"); you may not use this file except in
'\" compliance with the License. You may obtain a copy of the License at
'\" http://aolserver.com/.
'\"
'\" Software distributed under the License is distributed on an "AS IS"
'\" basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
'\" the License for the specific language governing rights and limitations
'\" under the License.
'\"
'\" The Original Code is AOLserver Code and related documentation
'\" distributed by AOL.
'\" 
'\" The Initial Developer of the Original Code is America Online,
'\" Inc. Portions created by AOL are Copyright (C) 1999 America Online,
'\" Inc. All Rights Reserved.
'\"
'\" Alternatively, the contents of this file may be used under the terms
'\" of the GNU General Public License (the "GPL"), in which case the
'\" provisions of GPL are applicable instead of those above.  If you wish
'\" to allow use of your version of this file only under the terms of the
'\" GPL and not to allow others to use your version of this file under the
'\" License, indicate your decision by deleting the provisions above and
'\" replace them with the notice and other provisions required by the GPL.
'\" If you do not delete the provisions above, a recipient may use your
'\" version of this file under either the License or the GPL.
'\" 
'\"
'\" $Header: /Users/dossy/Desktop/cvs/aolserver/doc/Ns_Exec.3,v 1.7 2006/04/13 19:05:43 jgdavidson Exp $
'\"
'\" 
.so man.macros

.TH Ns_Exec 3 4.0 AOLserver "AOLserver Library Procedures"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
Ns_ExecArgblk, Ns_ExecArgv, Ns_ExecProc, Ns_ExecProcess, Ns_Fork, Ns_GetEnviron, 
Ns_WaitForProcess, Ns_WaitProcess, ns_fork \- External process execution
.SH SYNOPSIS
.nf
\fB#include "ns.h"\fR
.sp
int
\fBNs_ExecArgblk\fR(\fIchar *exec, char *dir, int fdin, int fdout,
              char *args, Ns_Set *env\fR)
.sp
int
\fBNs_ExecArgv\fR(\fIchar *exec, char *dir, int fdin, int fdout, 
            char **argv, Ns_Set *env\fR)
.sp
int
\fBNs_ExecProc\fR(\fIchar *exec, char **argv\fR)
.sp
int
\fBNs_ExecProcess\fR(\fIchar *exec, char *dir, int fdin, int fdout,
			char *args, Ns_Set *env\fR)
.sp
int
\fBNs_Fork\fR(\fIvoid\fR)
.sp
char
\fB**Ns_GetEnviron\fR(\fIvoid\fR)
.sp
int
\fBNs_WaitForProcess\fR(\fIint pid, int *statusPtr\fR)
.sp
int
\fBNs_WaitProcess\fR(\fIint pid\fR)
.sp
int
\fBns_fork\fR(\fIvoid\fR)
.BE

.SH DESCRIPTION
.PP
These functions handle fork and exec operations. See files:
nsd/exec.c, nsd/tclenv.c and nsthread/fork.c.
.TP
\fBNs_ExecArgblk\fR(\fIexec, dir, fdin, fdout, args, env\fR)

Executes a command in a child process. Return process id of 
child process exec\'ing the command or \-1 on failure. Provides extended
error checking and error messages.
.TP
\fBNs_ExecArgv\fR(\fIexec, dir, fdin, fdout, argv, env\fR)

Execute a command in a child process using fork(2) and execve(2),
returns the process id of child process exec\'ing the command or
\-1 on failure. The child sends an extended error message to the
parent.
.TP
\fBNs_ExecProc\fR(\fIexec, argv\fR)

Executes a command in a child process. Returns the process id
of the child process exec\'ing the command or \-1 on failure. 
Simplifies call to Ns_ExecArgv.
.TP
\fBNs_ExecProcess\fR(\fIexec, dir, fdin, fdout, args, env\fR)

Executes a command in a child process. Returns the process id
of the child process exec\'ing the command or \-1 on failure. 
Calls Ns_ExecArgblk with same arguments.
.TP
\fBNs_Fork\fR(\fI\fR)
Posix style fork(), using fork1() on Solaris if needed. See
fork(2) man page. Calls ns_fork.
.TP
\fBNs_GetEnviron\fR(\fI\fR)

Returns pointer to the environment vector.
.TP
\fBNs_WaitForProcess\fR(\fIpid, statusPtr\fR)

Wait for child process. Returns NS_OK on success, or 
NS_ERROR on failure. *statusPtr is set to the exit 
code of the child process.
.TP
\fBNs_WaitProcess\fR(\fIpid\fR)

Wait for child process. Calls Ns_WaitForProcess with NULL
statusPtr. Returns NS_OK on success, or NS_ERROR on failure.
.TP
\fBns_fork\fR(\fI\fR)

Posix style fork(), using fork1() on Solaris if needed.

.SH "SEE ALSO"
nsd(1), info(n)

.SH KEYWORDS

